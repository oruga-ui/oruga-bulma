@use "sass:list";
@use "bulma/bulma";
@use "utils/variables" as var;
@use "utils/functions" as fn;

/* @docs */
$checkbox-active-background-color: bulma.$primary !default;
$checkbox-background-color: transparent !default;
$checkbox-border-color: bulma.$grey !default;
$checkbox-border-radius: bulma.$radius !default;
$checkbox-border-width: 2px !default;
$checkbox-checkmark-color: bulma.$primary-invert !default;
$checkbox-size: 1.25em !default;
$checkbox-colors: bulma.$form-colors !default;
/* @docs */

.b-checkbox.checkbox {
    @extend %unselectable;
    outline: none;
    display: inline-flex;
    align-items: center;

    &:not(.button) {
        margin-right: 0.5em;

        & + .checkbox:last-child {
            margin-right: 0;
        }
    }

    .check {
        outline: none;
        appearance: none;
        // font-size is changed by user agent to lower size
        font-size: inherit;
        width: $checkbox-size;
        height: $checkbox-size;
        flex-shrink: 0;
        border-radius: $checkbox-border-radius;
        border: $checkbox-border-width solid $checkbox-border-color;
        transition: background var.$speed-slow bulma.$easing;
        background: $checkbox-background-color;

        &:checked {
            background: $checkbox-active-background-color
                url(fn.checkmark($checkbox-checkmark-color)) no-repeat center
                center;
            border-color: $checkbox-active-background-color;
        }

        &:indeterminate {
            background: $checkbox-active-background-color
                url(fn.indeterminate($checkbox-checkmark-color)) no-repeat
                center center;
            border-color: $checkbox-active-background-color;
        }

        &:hover:not(:disabled) {
            border-color: $checkbox-active-background-color;
        }

        &:focus {
            &.check {
                box-shadow: 0 0 0.5em rgba(bulma.$grey, 0.8);
            }

            &:checked.check {
                box-shadow: 0 0 0.5em
                    rgba($checkbox-active-background-color, 0.8);
            }
        }
    }

    .control-label {
        padding-left: bulma.$control-padding-horizontal;
    }

    &.button {
        display: flex;
    }

    &.is-disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    &.is-small {
        @include bulma.control-small;
    }

    &.is-medium {
        @include bulma.control-medium;
    }

    &.is-large {
        @include bulma.control-large;
    }

    @each $name, $pair in $checkbox-colors {
        $color: list.nth($pair, 1);
        $color-invert: list.nth($pair, 2);
        &.is-#{$name} {
            .check {
                &:hover:not(:disabled) {
                    border-color: $color;
                }

                &:checked {
                    border-color: $color;
                    background: $color
                        url(checkmark($color-invert))
                        no-repeat
                        center
                        center;

                    &:focus {
                        box-shadow: 0 0 0.5em rgba($color, 0.8);
                    }
                }

                &:indeterminate {
                    background: $color
                        url(fn.indeterminate($color-invert))
                        no-repeat
                        center
                        center;
                    border-color: $color;
                }
            }
        }
    }
}
